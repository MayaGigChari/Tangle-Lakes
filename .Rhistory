data_full_Lower_n1n2_binned<- assign_bins(data_full_Lower_n1n2%>%drop_na(Fork_length))
data_full_Lower_n1n2%>%drop_na(Fork_length)
assign_bins(data_full_Lower_n1n2%>%drop_na(Fork_length))
data_full_Lower_n1n2%>%drop_na(Fork_length)
data_full_Lower_n1n2
data_full_Lower_n1n2<- data_full_Lower_n1n2%>%
drop_na(Fork_length)
data_full_Lower_n1n2
min(data_full_Lower_n1n2$Fork_length)
data_full_Lower_n1n2<- data_full_Lower_n1n2%>%
drop_na(Fork_length)%>%
filter(Fork_length!= "?")
data_full_Lower_n1n2_binned<- assign_bins(data_full_Lower_n1n2)
Lower_length_stats_bothyears<- binned_length_statistics(data_full_Lower_n1n2_binned)
#the preservation needs to happen here.
Lower_length_stats_2023<- binned_length_statistics(data_full_Lower_n1n2_binned, yearSort = TRUE, year = 2023)
Lower_length_stats_2024<- binned_length_statistics(data_full_Lower_n1n2_binned, yearSort = TRUE, year = 2024)
Lower_length_stats_2023
Lower_length_stats_bothyears_plot<- plot_length_binnedWithError(Lower_length_stats_bothyears)
Lower_length_stats_bothyears_plot
Lower_length_stats_2023_plot
Lower_length_stats_2023_plot<- plot_length_binnedWithError(Lower_length_stats_2023)
Lower_length_stats_2023_plot
Lower_length_stats_2024_plot<- plot_length_binnedWithError(Lower_length_stats_2024)
Lower_length_stats_2024_plot
wl.lin_lower <- lm_lw(data_full_Lower_n1n2%>%drop_na(Fork_length)%>%filter(Weight >0))
summary(wl.lin_lower)
# Remember, as a linear model the intercept is equal to ln(alpha) and the slope coefficient is equal to the beta parameter
coef(wl.lin_lower)
# Finally lets save our parameter estimates
# Remember if we want the mean-unbiased estimate of the alpha parameter we need
#   to account for the lognormal correction when re-transforming
wl.lin.sigma_lower <- sigma(_lower)
wl.lin.sigma_lower <- sigma(wl.lin_lower)
wl.lin_lower <- lm_lw(data_full_Lower_n1n2%>%drop_na(Fork_length)%>%filter(Weight >0))
summary(wl.lin_lower)
# Remember, as a linear model the intercept is equal to ln(alpha) and the slope coefficient is equal to the beta parameter
coef(wl.lin_lower)
# Finally lets save our parameter estimates
# Remember if we want the mean-unbiased estimate of the alpha parameter we need
#   to account for the lognormal correction when re-transforming
wl.lin.sigma_lower <- sigma(wl.lin_lower)
wl.lin.sigma_lower
# There is an analytical solution for the error standard deviation
# ln(alpha)
wl.lin.ln_alpha_lower <- as.numeric(coef(wl.lin_lower)[1])
# alpha (mean-unbiased)# this is from the fish 622 course.
wl.lin.alpha_lower <- exp(wl.lin.ln_alpha_lower)*exp((wl.lin.sigma_lower^2)/2)
# Beta
wl.lin.beta_lower <- as.numeric(coef(wl.lin_lower)[2])
wl.lin.beta_lower
# Lets plot the model fit
plot_wl(data=data_full_Lower_n1n2, alpha=wl.lin.alpha_lower, beta=wl.lin.beta_lower)
wl.lin.beta_lower
data_full_Lower
#make a copy
data_full_Lower_ld_copy<- data_full_Lower
#do the assignment
data_full_Lower_ld_copy$Fork_length<- data_full_Lower_ld_copy$corrected_length
data_full_Lower_n1n2_corrected<- data_full_Lower_ld_copy%>%
filter(grouping %in% c("n1", "n2"))
data_full_Lower_n1n2_corrected<- data_full_Lower_n1n2_corrected %>%
mutate(Year_capped = year(Date))
Lower_continuous_viz_correct<- plot_length_dist_continuous(data_full_Lower_n1n2_corrected, lakeSystem = "Shallow-Round")
Lower_continuous_viz_correct$full_distribution_bothyears
#let's look at the total combined distribution
Lower_continuous_viz_correct$full_distribution
Lower_continuous_viz_correct$full_distribution_years_sep
#bin the lengths
data_full_Lower_n1n2_corrected_binned<- assign_bins(data_full_Lower_n1n2_corrected)
#one na.
Lower_length_stats_bothyears_corrected<- binned_length_statistics(data_full_Lower_n1n2_corrected_binned)
#the na is exisitng in the bins category.
#the preservation needs to happen here.
Lower_length_stats_2023_corrected<- binned_length_statistics(data_full_Lower_n1n2_corrected_binned, yearSort = TRUE, year = 2023)
Lower_length_stats_2024_corrected<- binned_length_statistics(data_full_Lower_n1n2_corrected_binned, yearSort = TRUE, year = 2024)
#make some plots for both years, 2023 and 2024
#shifts everything way low.,
Lower_length_stats_bothyears_plot_corrected<- plot_length_binnedWithError(Lower_length_stats_bothyears_corrected)
Lower_length_stats_2023_plot_corrected<- plot_length_binnedWithError(Lower_length_stats_2023_corrected)
Lower_length_stats_2024_plot_corrected<- plot_length_binnedWithError(Lower_length_stats_2024_corrected)
data_full_Lower
#because the functions were built for a dataframe with fiel "Fork_length", we will make a new dataframe and just assign the corrected_length
#value to the Fork_length value.
#make a copy
data_full_Lower_ld_copy<- data_full_Lower
#do the assignment
data_full_Lower_ld_copy$Fork_length<- data_full_Lower_ld_copy$corrected_length
#now we can proceed with the same analyses as above.
#first we will do some data wrangling and visualization
data_full_Lower_n1n2_corrected<- data_full_Lower_ld_copy%>%
filter(grouping %in% c("n1", "n2"))
data_full_Lower_n1n2_corrected<- data_full_Lower_n1n2_corrected %>%
mutate(Year_capped = year(Date))%>%
filter(Fork_length!= "?")
Lower_continuous_viz_correct<- plot_length_dist_continuous(data_full_Lower_n1n2_corrected, lakeSystem = "Shallow-Round")
#it only makes sense to look at both years now because the 2024 data has been corrected, so no longer really represents 2024.
#if we look at both years overlayed, we can see that with the correction the 2024 histogram has a maximum density at a much lower fork length.
Lower_continuous_viz_correct$full_distribution_bothyears
#let's look at the total combined distribution
Lower_continuous_viz_correct$full_distribution
#now let's look at the years in separate panels. observe how shifted the data has become.
Lower_continuous_viz_correct$full_distribution_years_sep
#bin the lengths
data_full_Lower_n1n2_corrected_binned<- assign_bins(data_full_Lower_n1n2_corrected)
#do an analysis for both years, 2023 and 2024
#perhaps there is one missing.
#one na.
Lower_length_stats_bothyears_corrected<- binned_length_statistics(data_full_Lower_n1n2_corrected_binned)
#something was binned as NA
#the na is exisitng in the bins category.
#the preservation needs to happen here.
Lower_length_stats_2023_corrected<- binned_length_statistics(data_full_Lower_n1n2_corrected_binned, yearSort = TRUE, year = 2023)
Lower_length_stats_2024_corrected<- binned_length_statistics(data_full_Lower_n1n2_corrected_binned, yearSort = TRUE, year = 2024)
#make some plots for both years, 2023 and 2024
#shifts everything way low.,
Lower_length_stats_bothyears_plot_corrected<- plot_length_binnedWithError(Lower_length_stats_bothyears_corrected)
Lower_length_stats_2023_plot_corrected<- plot_length_binnedWithError(Lower_length_stats_2023_corrected)
Lower_length_stats_2024_plot_corrected<- plot_length_binnedWithError(Lower_length_stats_2024_corrected)
Lower_length_stats_bothyears_plot_corrected
Lower_length_stats_2023_plot_corrected
Lower_length_stats_2024_plot_corrected
Lower_length_stats_bothyears_plot_corrected
Lower_length_stats_bothyears_plot
min_size_capture_Lower<- data_full_Lower%>%
filter(Date < "2024-01-01")%>%
filter(!is.na(Fork_length))%>%
summarize(
min = min(as.numeric(Fork_length))
)
min_size_capture_Lower
Lower_continuous_viz_trunc<- plot_length_dist_continuous(data_full_Lower_n1n2_corrected_trunc, lakeSystem = "Shallow-Round")
Lower_continuous_viz_trunc$full_distribution_bothyears
#let's look at the total combined distribution
Lower_continuous_viz_trunc$full_distribution
#we really mess up the 2024 distribution when we truncate it to fit 2023. (really for this it would be an "extension" of the 2023 data. )
Lower_continuous_viz_trunc$full_distribution_years_sep
#bin the lengths
data_full_Lower_n1n2_trunc_binned<- assign_bins(data_full_Lower_n1n2_corrected_trunc)
Lower_length_stats_bothyears_trunc<- binned_length_statistics(data_full_Lower_n1n2_trunc_binned)
Lower_length_stats_2023_corrected_trunc<- binned_length_statistics(data_full_Lower_n1n2_trunc_binned, yearSort = TRUE, year = 2023)
Lower_continuous_viz<- plot_length_dist_continuous(data_full_Lower_n1n2, lakeSystem = "Lower")
Lower_continuous_viz
#THIS is a very strange distribution for 2024 Lower lake. Not many fish were caught, and it looks like one in each size bin was caught.
Lower_continuous_viz$full_distribution_years_sep
data_full_Lower_truncated
data_full_Lower
data_full_Lower_truncated
data_full_Lower_trunc_copy<- data_full_Lower_truncated
#do the assignment
data_full_Lower_trunc_copy$Fork_length<- data_full_Lower_trunc_copy$corrected_length
#now we can proceed with the same analyses as above.
#first we will do some data wrangling and visualization
data_full_Lower_n1n2_corrected_trunc<- data_full_Lower_trunc_copy%>%
filter(grouping %in% c("n1", "n2"))
data_full_Lower_n1n2_corrected_trunc<- data_full_Lower_n1n2_corrected_trunc %>%
mutate(Year_capped = year(Date))
Lower_continuous_viz_trunc<- plot_length_dist_continuous(data_full_Lower_n1n2_corrected_trunc, lakeSystem = "Lower")
#it only makes sense to look at both years now because the 2024 data has been corrected, so no longer really represents 2024.
#if we look at both years overlayed, we can see that with the correction the 2024 histogram has a maximum density at a much lower fork length.
Lower_continuous_viz_trunc$full_distribution_bothyears
#let's look at the total combined distribution
Lower_continuous_viz_trunc$full_distribution
#now let's look at the years in separate panels. observe how shifted the data has become.
#we really mess up the 2024 distribution when we truncate it to fit 2023. (really for this it would be an "extension" of the 2023 data. )
Lower_continuous_viz_trunc$full_distribution_years_sep
#bin the lengths
data_full_Lower_n1n2_trunc_binned<- assign_bins(data_full_Lower_n1n2_corrected_trunc)
Lower_length_stats_bothyears_trunc<- binned_length_statistics(data_full_Lower_n1n2_trunc_binned)
Lower_length_stats_2023_corrected_trunc<- binned_length_statistics(data_full_Lower_n1n2_trunc_binned, yearSort = TRUE, year = 2023)
Lower_length_stats_2024_corrected_trunc<- binned_length_statistics(data_full_Lower_n1n2_trunc_binned, yearSort = TRUE, year = 2024)
#make some plots for both years, 2023 and 2024
Lower_length_stats_bothyears_plot_corrected_trunc<- plot_length_binnedWithError(Lower_length_stats_bothyears_trunc)
Lower_length_stats_2023_plot_corrected_trunc<- plot_length_binnedWithError(Lower_length_stats_2023_corrected_trunc)
Lower_length_stats_2024_plot_corrected_trunc<- plot_length_binnedWithError(Lower_length_stats_2024_corrected_trunc)
Lower_length_stats_bothyears_plot_corrected_trunc
Lower_length_stats_bothyears_plot
#this is not correct. this just gets all the n1s and the recaps, not the n2s.
#this has way fewer things than the original dataset. I don't know why.
#this dataset filters out the redundancy, so it should not be used for the peterson estimate.
sf_df_nounk <- sf_df %>%
filter(Floy != "UNK" | is.na(Floy))
#need to go by stats now.
sf_df_Lower_r1<- st_crop(sf_df_nounk, Lower_lake_region_1)
sf_df_Lower_r1$region<-1
sf_df_Lower_r2<- st_crop(sf_df_nounk, Lower_lake_region_2)
sf_df_Lower_r2$region<-2
sf_df_Lower_r3<- st_crop(sf_df_nounk, Lower_lake_region_3)
sf_df_Lower_r3$region<-3
sf_df_Lower_regions<- sf_df_Lower_r1%>%
rbind(sf_df_Lower_r2)%>%
rbind(sf_df_Lower_r3)
#need to go by stats now.
sf_df_Lower_r1<- st_crop(sf_df_nounk, Lower_lake_region_1)
sf_df_nounk <- sf_df %>%
filter(Floy != "UNK" | is.na(Floy))
#need to go by stats now.
sf_df_Lower_r1<- st_crop(sf_df_nounk, lower_lake_region_1)
sf_df_Lower_r1$region<-1
sf_df_Lower_r2<- st_crop(sf_df_nounk, lower_lake_region_2)
sf_df_Lower_r2$region<-2
sf_df_Lower_r3<- st_crop(sf_df_nounk, lower_lake_region_3)
sf_df_Lower_r3$region<-3
sf_df_Lower_regions<- sf_df_Lower_r1%>%
rbind(sf_df_Lower_r2)%>%
rbind(sf_df_Lower_r3)
#there appears to be one fish where area_marked is not given but area recapped is 1. What is going on with this fish/floy?
#perhaps it is a floy that has an NA for 2023?
test1_Lower<- chi2_markrecap(tibble(sf_df_Lower_regions))
pet_diag_1<- chisq.test(test1_Lower)
fisher.test(test1_Lower)
test1_Lower
fisher.test(test1_Lower)
#redo the test, filtering the dataframe for corrected lengths that do not meet the cutoff for 2023.
#this doesn't seem to affect the outcome, because n2 individuals that are not recaps are not really considered.
test1_corrected_Lower<- chi2_markrecap(tibble(sf_df_Lower_regions%>%filter(corrected_length >= min_size_capture_Lower$min)))
pet_diag_1_corrected_Lower<- chisq.test(test1_corrected_Lower)
fisher.test(test1_corrected_Lower)
test1_corrected_Lower
min_size_capture_Lower$min
min_size_capture_Lower$min
sf_df_Lower_regions
sf_df_Lower_regions%>%filter(corrected_length >= min_size_capture_Lower$min)
#redo the test, filtering the dataframe for corrected lengths that do not meet the cutoff for 2023.
#this doesn't seem to affect the outcome, because n2 individuals that are not recaps are not really considered.
test1_corrected_Lower<- chi2_markrecap(tibble(sf_df_Lower_regions%>%filter(corrected_length >= min_size_capture_Lower$min)))
test1_corrected_Lower
### TEST FOR EQUAL PROBABILITY OF CAPTURE IN EVENT 1 AND EVENT 2
ret_Lower<- petersen_consistency(tibble(sf_df_Lower_regions), region)
ret_Lower$consistency_p_values
#remember, we separated m2 and n2, so need to add for matt's code.
counts_by_strata_Lower <- sf_df_Lower_regions %>% group_by(region) %>%
summarize(n1 = sum(stat == "n1"), n2 = sum(stat == "n2")+sum(stat == "m2"), m2 = sum(stat == "m2"))
matrix_Lower<- petersen_matrix_tyerscode(sf_df_Lower_regions)
matrix_Lower$"NA"<-NULL
consistencytest(counts_by_strata_Lower$n1, counts_by_strata_Lower$n2, stratamat = matrix_Lower)
sf_df_Lower_regions_nosmall<- (sf_df_Lower_regions%>%filter(corrected_length >= min_size_capture_Lower$min)
sf_df_Lower_regions_nosmall<- sf_df_Lower_regions%>%filter(corrected_length >= min_size_capture_Lower$min
sf_df_Lower_regions_nosmall<- sf_df_Lower_regions%>%filter(corrected_length >= min_size_capture_Lower$min
sf_df_Lower_regions_nosmall<- sf_df_Lower_regions%>%filter(corrected_length >= min_size_capture_Lower$min)
sf_df_Lower_regions_nosmall<- sf_df_Lower_regions%>%filter(corrected_length >= min_size_capture_Lower$min)
sf_df_Lower_regions_nosmall<- sf_df_Lower_regions%>%filter(corrected_length >= min_size_capture_Lower$min)
counts_by_strata_Lower <- sf_df_Lower_regions_nosmall %>% group_by(region) %>%
summarize(n1 = sum(stat == "n1"), n2 = sum(stat == "n2")+sum(stat == "m2"), m2 = sum(stat == "m2"))
matrix_Lower<- petersen_matrix_tyerscode(sf_df_Lower_regions)
matrix_Lower$"NA"<-NULL
consistencytest(counts_by_strata_Lower$n1, counts_by_strata_Lower$n2, stratamat = matrix_Lower)
Lower_lake_data%>%
filter(!is.na(Fork_length))%>%
summarize(
min = min(Fork_length)
)
Lower_lake_data_nomorts<- Lower_lake_data%>%
filter(stat == grouping)%>%
filter(cap_label %in% c("n1", "n2", "m2"))
Lower_lake_data_nomovers<- Lower_lake_data_nomorts%>%
filter(!Floy %in% c("19970", "18608"))
petersen_estimate_Lower<- pop_calc(petersen_funcs,  Lower_lake_data_nomorts)
Lower_lake_data%>%
filter(!is.na(Fork_length))%>%
summarize(
min = min(Fork_length)
)
Lower_lake_data_nomorts<- Lower_lake_data%>%
filter(stat == grouping)%>%
filter(cap_label %in% c("n1", "n2", "m2"))
Upper_lake_data
lower_lake_data
Lower_lake_data_nomorts<-
lower_lake_data%>%
filter(stat == grouping)%>%
filter(cap_label %in% c("n1", "n2", "m2"))
Lower_lake_data_nomovers<- Lower_lake_data_nomorts%>%
filter(!Floy %in% c("19970", "18608"))
petersen_estimate_Lower<- pop_calc(petersen_funcs,  Lower_lake_data_nomorts)
Chapman_estimate_Lower<- pop_calc(Chapman_funcs, Lower_lake_data_nomorts)
bailey_estimate_Lower<- pop_calc(Bailey_funcs, Lower_lake_data_nomorts)
petersen_estimate_Lower
Chapman_estimate_Lower
bailey_estimate_Lower
data_full_Lower_truncated
#we apply the filters.
data_full_Lower_truncated_pop<- data_full_Lower_truncated%>%
filter(stat == grouping)%>%
filter(cap_label %in% c("n1", "n2", "m2"))
#now we do the pop estimates.
petersen_estimate_trunc_Lower<- pop_calc(petersen_funcs,  data_full_Lower_truncated_pop)
Chapman_estimate_trunc_Lower<- pop_calc(Chapman_funcs, data_full_Lower_truncated_pop)
bailey_estimate_trunc_Lower<- pop_calc(Bailey_funcs, data_full_Lower_truncated_pop)
#there was a VERY small sample size in the n2 event. We will discuss this in the discussion.
#A sample size of 50 is required to attain the desired precision criteria. A sample of 19 fish was captured in round tangle lake in event 2. Therefore, the
#precision criterion are NOT met for round tangle lakes.
petersen_estimate_trunc_Lower
Chapman_estimate_trunc_Lower
bailey_estimate_trunc_Lower
data_full_Lower
data_full_Lower%>%
filter(stat == grouping)
data_full_Lower_truncated_pop
sf_df_Lower_r1
corrected_total_data
view(corrected_total_data%>%
filter(Floy == "UNK"))
#we will save this dataframe so we don't have to keep running this script over and over.
write.csv(corrected_total_data, "Total_data_corrected_lengths.csv", row.names = FALSE)
#reading this gives us the exact format we want. Except maybe some minor discrepancy between <NA> and NA
data<- read.csv("Total_data_corrected_lengths.csv")
niceplot_strata <- function(data, extent, strata_lat_lines) {
# Add lat/long to the data
sf_df_Data <- data %>%
mutate(
lon = st_coordinates(.)[, 1],
lat = st_coordinates(.)[, 2]
)
# Base map with lake and points
whole_lake_plot <- ggplot() +
geom_sf(data = st_crop(tangle_lakes, extent), fill = "lightblue", alpha = 0.3) +
geom_point(data = sf_df_Data, aes(x = lon, y = lat, color = CaptureEvent,
text = paste0("Lat: ", round(lat, 5),
"<br>Lon: ", round(lon, 5),
"<br>Event: ", CaptureEvent)),
size = 0.8) +
# Add horizontal lines for strata boundaries
geom_hline(yintercept = strata_lat_lines, linetype = "dashed", color = "red") +
scale_color_discrete() +
theme_bw() +
labs(color = "Capture Event") +
theme(
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14)
)
return(whole_lake_plot)
}
strata_lat_lines <- c(63.10, 63.12, 63.14, 63.015, 63.0255, 63.035, 63.05, 63.062, 63.072)
# Call the function
niceplot(data = sf_df, extent = fish_extent, strata_lat_lines = strata_lat_lines)
niceplot_strata <- function(data, extent, strata_lat_lines) {
# Add lat/long to the data
sf_df_Data <- data %>%
mutate(
lon = st_coordinates(.)[, 1],
lat = st_coordinates(.)[, 2]
)
# Base map with lake and points
whole_lake_plot <- ggplot() +
geom_sf(data = st_crop(tangle_lakes, extent), fill = "lightblue", alpha = 0.3) +
geom_point(data = sf_df_Data, aes(x = lon, y = lat, color = CaptureEvent,
text = paste0("Lat: ", round(lat, 5),
"<br>Lon: ", round(lon, 5),
"<br>Event: ", CaptureEvent)),
size = 0.8) +
# Add horizontal lines for strata boundaries
geom_hline(yintercept = strata_lat_lines, linetype = "dashed", color = "red") +
scale_color_discrete() +
theme_bw() +
labs(color = "Capture Event") +
theme(
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14)
)
return(whole_lake_plot)
}
strata_lat_lines <- c(63.10, 63.12, 63.14, 63.015, 63.0255, 63.035, 63.05, 63.062, 63.072)
# Call the function
niceplot_strata(data = sf_df, extent = fish_extent, strata_lat_lines = strata_lat_lines)
niceplot_strata <- function(extent, strata_lat_lines) {
# Add lat/long to the data
# Base map with lake and points
whole_lake_plot <- ggplot() +
geom_sf(data = st_crop(tangle_lakes, extent), fill = "lightblue", alpha = 0.3)+
# Add horizontal lines for strata boundaries
geom_hline(yintercept = strata_lat_lines, linetype = "dashed", color = "red") +
scale_color_discrete() +
theme_bw() +
labs(color = "Capture Event") +
theme(
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14)
)
return(whole_lake_plot)
}
strata_lat_lines <- c(63.10, 63.12, 63.14, 63.015, 63.0255, 63.035, 63.05, 63.062, 63.072)
# Call the function
niceplot_strata(data = sf_df, extent = fish_extent, strata_lat_lines = strata_lat_lines)
niceplot_strata <- function(extent, strata_lat_lines) {
# Add lat/long to the data
# Base map with lake and points
whole_lake_plot <- ggplot() +
geom_sf(data = st_crop(tangle_lakes, extent), fill = "lightblue", alpha = 0.3)+
# Add horizontal lines for strata boundaries
geom_hline(yintercept = strata_lat_lines, linetype = "dashed", color = "red") +
scale_color_discrete() +
theme_bw() +
labs(color = "Capture Event") +
theme(
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14)
)
return(whole_lake_plot)
}
strata_lat_lines <- c(63.10, 63.12, 63.14, 63.015, 63.0255, 63.035, 63.05, 63.062, 63.072)
# Call the function
niceplot_strata(extent = fish_extent, strata_lat_lines = strata_lat_lines)
strata_lat_lines <- c(63.12, 63.14, 63.015, 63.0255, 63.035, 63.05, 63.062, 63.072)
# Call the function
niceplot_strata(extent = fish_extent, strata_lat_lines = strata_lat_lines)
strata_lat_lines <- c(63.12, 63.14, 63.015, 63.0255, 63.035, 63.05, 63.062, 63.072)
# Call the function
niceplot_strata(extent = fish_extent, strata_lat_lines = strata_lat_lines)
strata_lat_lines <- c(63.10, 63.12, 63.14, 63.017, 63.0255, 63.035, 63.05, 63.062, 63.072)
# Call the function
niceplot_strata(extent = fish_extent, strata_lat_lines = strata_lat_lines)
niceplot_strata <- function(extent, strata_lat_lines1, strata_lat_lines_2, strata_lat_lines_3) {
# Add lat/long to the data
# Base map with lake and points
whole_lake_plot <- ggplot() +
geom_sf(data = st_crop(tangle_lakes, extent), fill = "lightblue", alpha = 0.3)+
# Add horizontal lines for strata boundaries
geom_hline(yintercept = strata_lat_lines_1, linetype = "dashed", color = "pink") +
geom_hline(yintercept = strata_lat_lines_2, linetype = "dashed", color = "orange") +
geom_hline(yintercept = strata_lat_lines_3, linetype = "dashed", color = "purple") +
scale_color_discrete() +
theme_bw() +
labs(color = "Capture Event") +
theme(
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14)
)
return(whole_lake_plot)
}
strata_lat_lines_upper <- c( 63.017, 63.0255, 63.035, 63.048)
strat_lat_lines_shallowround <- c(63.05, 63.062, 63.072, 63.081)
strat_lines_lower<- c(63.10, 63.12, 63.14,63.155)
# Call the function
niceplot_strata(extent = fish_extent, strata_lat_lines1 = strata_lat_lines_upper, strata_lat_lines_2 = strat_lat_lines_shallowround, strata_lat_lines_3 = strat_lines_lower)
niceplot_strata <- function(extent, strata_lat_lines_1, strata_lat_lines_2, strata_lat_lines_3) {
# Add lat/long to the data
# Base map with lake and points
whole_lake_plot <- ggplot() +
geom_sf(data = st_crop(tangle_lakes, extent), fill = "lightblue", alpha = 0.3)+
# Add horizontal lines for strata boundaries
geom_hline(yintercept = strata_lat_lines_1, linetype = "dashed", color = "pink") +
geom_hline(yintercept = strata_lat_lines_2, linetype = "dashed", color = "orange") +
geom_hline(yintercept = strata_lat_lines_3, linetype = "dashed", color = "purple") +
scale_color_discrete() +
theme_bw() +
labs(color = "Capture Event") +
theme(
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14)
)
return(whole_lake_plot)
}
strata_lat_lines_upper <- c( 63.017, 63.0255, 63.035, 63.048)
strat_lat_lines_shallowround <- c(63.05, 63.062, 63.072, 63.081)
strat_lines_lower<- c(63.10, 63.12, 63.14,63.155)
# Call the function
niceplot_strata(extent = fish_extent, strata_lat_lines_1 = strata_lat_lines_upper, strata_lat_lines_2 = strat_lat_lines_shallowround, strata_lat_lines_3 = strat_lines_lower)
strat_lines_lower<- c(63.10, 63.12, 63.14,63.148)
# Call the function
niceplot_strata(extent = fish_extent, strata_lat_lines_1 = strata_lat_lines_upper, strata_lat_lines_2 = strat_lat_lines_shallowround, strata_lat_lines_3 = strat_lines_lower)
strat_lines_lower<- c(63.10, 63.12, 63.14,63.149)
# Call the function
niceplot_strata(extent = fish_extent, strata_lat_lines_1 = strata_lat_lines_upper, strata_lat_lines_2 = strat_lat_lines_shallowround, strata_lat_lines_3 = strat_lines_lower)
strat_lines_lower<- c(63.10, 63.12, 63.14,63.15)
# Call the function
niceplot_strata(extent = fish_extent, strata_lat_lines_1 = strata_lat_lines_upper, strata_lat_lines_2 = strat_lat_lines_shallowround, strata_lat_lines_3 = strat_lines_lower)
niceplot_strata <- function(extent, strata_lat_lines_1, strata_lat_lines_2, strata_lat_lines_3) {
# Add lat/long to the data
# Base map with lake and points
whole_lake_plot <- ggplot() +
geom_sf(data = st_crop(tangle_lakes, extent), fill = "lightblue", alpha = 0.3)+
# Add horizontal lines for strata boundaries
geom_hline(yintercept = strata_lat_lines_1, linetype = "dashed", color = "blue", alpha = 1) +
geom_hline(yintercept = strata_lat_lines_2, linetype = "dashed", color = "orange",alpha = 1) +
geom_hline(yintercept = strata_lat_lines_3, linetype = "dashed", color = "purple",alpha = 1) +
scale_color_discrete() +
theme_bw() +
labs(color = "Capture Event") +
theme(
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14)
)
return(whole_lake_plot)
}
strata_lat_lines_upper <- c( 63.017, 63.0255, 63.035, 63.048)
strat_lat_lines_shallowround <- c(63.05, 63.062, 63.072, 63.081)
strat_lines_lower<- c(63.10, 63.12, 63.14,63.15)
# Call the function
niceplot_strata(extent = fish_extent, strata_lat_lines_1 = strata_lat_lines_upper, strata_lat_lines_2 = strat_lat_lines_shallowround, strata_lat_lines_3 = strat_lines_lower)
strata_lat_lines_upper <- c( 63.017, 63.0255, 63.035, 63.046)
strat_lat_lines_shallowround <- c(63.05, 63.062, 63.072, 63.081)
strat_lines_lower<- c(63.10, 63.12, 63.14,63.15)
# Call the function
niceplot_strata(extent = fish_extent, strata_lat_lines_1 = strata_lat_lines_upper, strata_lat_lines_2 = strat_lat_lines_shallowround, strata_lat_lines_3 = strat_lines_lower)
# Call the function
strata_plot<-niceplot_strata(extent = fish_extent, strata_lat_lines_1 = strata_lat_lines_upper, strata_lat_lines_2 = strat_lat_lines_shallowround, strata_lat_lines_3 = strat_lines_lower)
ggsave("strata_plot.png", strata_plot, dpi = 300)
